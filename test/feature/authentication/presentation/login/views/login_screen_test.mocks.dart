// Mocks generated by Mockito 5.4.4 from annotations
// in nagorik_mobile/test/feature/authentication/presentation/login/views/login_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nagorik_mobile/src/feature/authentication/domain/entities/login_entity.dart'
    as _i4;
import 'package:nagorik_mobile/src/feature/authentication/presentation/login/riverpod/login_provider.dart'
    as _i3;
import 'package:riverpod_annotation/riverpod_annotation.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAutoDisposeAsyncNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AutoDisposeAsyncNotifierProviderRef<T> {
  _FakeAutoDisposeAsyncNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAsyncValue_1<T> extends _i1.SmartFake implements _i2.AsyncValue<T> {
  _FakeAsyncValue_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Login].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogin extends _i1.Mock implements _i3.Login {
  @override
  _i2.AutoDisposeAsyncNotifierProviderRef<_i4.LoginResponseEntity?> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeAutoDisposeAsyncNotifierProviderRef_0<
            _i4.LoginResponseEntity?>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub: _FakeAutoDisposeAsyncNotifierProviderRef_0<
            _i4.LoginResponseEntity?>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AutoDisposeAsyncNotifierProviderRef<_i4.LoginResponseEntity?>);

  @override
  _i2.AsyncValue<_i4.LoginResponseEntity?> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAsyncValue_1<_i4.LoginResponseEntity?>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAsyncValue_1<_i4.LoginResponseEntity?>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.AsyncValue<_i4.LoginResponseEntity?>);

  @override
  set state(_i2.AsyncValue<_i4.LoginResponseEntity?>? newState) =>
      super.noSuchMethod(
        Invocation.setter(
          #state,
          newState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i4.LoginResponseEntity?> get future => (super.noSuchMethod(
        Invocation.getter(#future),
        returnValue: _i5.Future<_i4.LoginResponseEntity?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LoginResponseEntity?>.value(),
      ) as _i5.Future<_i4.LoginResponseEntity?>);

  @override
  _i5.Future<void> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void listenSelf(
    void Function(
      _i2.AsyncValue<_i4.LoginResponseEntity?>?,
      _i2.AsyncValue<_i4.LoginResponseEntity?>,
    )? listener, {
    void Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #listenSelf,
          [listener],
          {#onError: onError},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i4.LoginResponseEntity?> update(
    _i5.FutureOr<_i4.LoginResponseEntity?> Function(_i4.LoginResponseEntity?)?
        cb, {
    _i5.FutureOr<_i4.LoginResponseEntity?> Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [cb],
          {#onError: onError},
        ),
        returnValue: _i5.Future<_i4.LoginResponseEntity?>.value(),
        returnValueForMissingStub: _i5.Future<_i4.LoginResponseEntity?>.value(),
      ) as _i5.Future<_i4.LoginResponseEntity?>);

  @override
  bool updateShouldNotify(
    _i2.AsyncValue<_i4.LoginResponseEntity?>? previous,
    _i2.AsyncValue<_i4.LoginResponseEntity?>? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
